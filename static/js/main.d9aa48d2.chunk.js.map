{"version":3,"sources":["Components/Nav/Nav.js","Components/Home/Home.js","Components/Posts/Posts.js","Components/SearchResults/SearchResults.js","Components/SubredditList/SubredditList.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","search","setSearch","className","type","value","placeholder","onChange","target","to","Home","item","setItem","useEffect","a","fetch","fetchItem","json","items","data","children","map","title","author","src","url","alt","selftext","Math","round","upvote_ratio","id","Posts","match","params","subreddit","SearchResults","SubredditList","fetchItems","setItems","icon_img","display_name","App","basename","process","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9aa48d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SiReddit } from \"react-icons/si\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport \"../Nav/Nav.css\";\r\n\r\nconst Nav = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const handleChange = (search) => {\r\n    setSearch(search.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Nav\">\r\n      <div className=\"logo\">\r\n        <SiReddit className=\"logo-icon\" />\r\n        <h1>\r\n          Sni<span>pp</span>et\r\n        </h1>\r\n      </div>\r\n      <p>Reddit, minimised</p>\r\n      <div className=\"searchbar\">\r\n        <input\r\n          type=\"text\"\r\n          value={search}\r\n          placeholder=\"Search...\"\r\n          onChange={handleChange}\r\n        />\r\n        <Link to={`/${search}`}>\r\n          <FiSearch className=\"search-icon\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../Home/Home.css\";\r\n\r\nconst Home = () => {\r\n  const [item, setItem] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchItem = async () => {\r\n      const fetchItem = await fetch(`https://www.reddit.com/r/popular.json`);\r\n      const items = await fetchItem.json();\r\n      setItem(items.data.children);\r\n      // console.log(items.data.children);\r\n    };\r\n\r\n    fetchItem();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-posts\">\r\n      {item.map((item) => (\r\n        <div className=\"home-post\" key={item.data.id}>\r\n          <h1 className=\"title\">{item.data.title}</h1>\r\n          <hr />\r\n          <p className=\"author\">\r\n            <span>by</span> {item.data.author}\r\n          </p>\r\n          <img src={item.data.url} alt=\"\" />\r\n          <p className=\"content\">{item.data.selftext}</p>\r\n          <hr />\r\n          <p className=\"upvotes\">\r\n            {Math.round(item.data.upvote_ratio * 100)}% Upvoted\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../Posts/Posts.css\";\r\n\r\nconst Posts = ({ match }) => {\r\n  const [item, setItem] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchItem = async () => {\r\n      const fetchItem = await fetch(\r\n        `https://www.reddit.com/r/${match.params.subreddit}.json`\r\n      );\r\n      const items = await fetchItem.json();\r\n      setItem(items.data.children);\r\n      // console.log(items.data.children);\r\n    };\r\n\r\n    fetchItem();\r\n\r\n    // console.log(match);\r\n  }, [match]);\r\n\r\n  return (\r\n    <div className=\"subreddit-posts\">\r\n      {item.map((item) => (\r\n        <div className=\"post\" key={item.data.id}>\r\n          <h1 className=\"title\">{item.data.title}</h1>\r\n          <hr />\r\n\r\n          <p className=\"author\">\r\n            <span>by</span> {item.data.author}\r\n          </p>\r\n          <img src={item.data.url} alt=\"\" />\r\n          <p className=\"content\">{item.data.selftext}</p>\r\n          <hr />\r\n          <p className=\"upvotes\">\r\n            {Math.round(item.data.upvote_ratio * 100)}% Upvoted\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../SearchResults/SearchResults.css\";\r\n\r\nconst SearchResults = ({ match }) => {\r\n  const [item, setItem] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchItem = async () => {\r\n      const fetchItem = await fetch(\r\n        `https://www.reddit.com/search.json?q=${match.params.search}`\r\n      );\r\n      const items = await fetchItem.json();\r\n      setItem(items.data.children);\r\n      // console.log(items.data.children);\r\n    };\r\n\r\n    fetchItem();\r\n\r\n    // console.log(match);\r\n  }, [match]);\r\n\r\n  return (\r\n    <div className=\"searchresult-posts\">\r\n      {item.map((item) => (\r\n        <div className=\"result-post\" key={item.data.id}>\r\n          <h1 className=\"title\">{item.data.title}</h1>\r\n          <hr />\r\n\r\n          <p className=\"author\">\r\n            <span>by</span> {item.data.author}\r\n          </p>\r\n          <img src={item.data.url} alt=\"\" />\r\n          <p className=\"content\">{item.data.selftext}</p>\r\n          <hr />\r\n\r\n          <p className=\"upvotes\">\r\n            {Math.round(item.data.upvote_ratio * 100)}% Upvoted\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../SubredditList/SubredditList.css\";\r\n\r\nconst SubredditList = () => {\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    const data = await fetch(\"https://www.reddit.com/subreddits.json\");\r\n    const items = await data.json();\r\n    setItems(items.data.children);\r\n    // console.log(items);\r\n  };\r\n\r\n  return (\r\n    <div className=\"subreddit-list\">\r\n      <h1>SubReddits</h1>\r\n      <hr />\r\n      {items.map((item) => (\r\n        <div className=\"categories\" key={item.data.id}>\r\n          <img src={item.data.icon_img} alt={item.data.display_name} />\r\n          <h2>\r\n            <Link to={`/subreddit/${item.data.display_name}`}>\r\n              {item.data.display_name}\r\n            </Link>\r\n          </h2>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubredditList;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./Components/Nav/Nav\";\nimport Home from \"./Components/Home/Home\";\nimport Posts from \"./Components/Posts/Posts\";\nimport SearchResults from \"./Components/SearchResults/SearchResults\";\nimport SubredditList from \"./Components/SubredditList/SubredditList\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/reddit-client-v2\"}>\n      <div className=\"App\">\n        <Nav />\n        <div className=\"main\">\n          <SubredditList />\n          <Switch>\n            <Route path=\"/subreddit/:subreddit\" component={Posts} />\n            <Route path=\"/:search\" component={SearchResults} />\n            <Route path=\"/\" exact component={Home} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}